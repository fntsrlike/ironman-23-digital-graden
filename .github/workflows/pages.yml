name: Deploy Nuxt site to Pages

on:
  push:
    branches: ["main"]
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Get blog posts
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.CONTENT_REPO }}
          ref: main
          path: ./_write

      - name: Get build time
        shell: bash
        run: |
          TZ=Asia/Taipei echo "BUILD_TIME=$(date +'%Y-%m-%dT%H:%M:%S%:z')" >> $GITHUB_ENV

      - name: Export static HTML artifact
        run: pnpm run generate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          name: deployment
          path: ./dist

  # Deployment job
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.github-deployment.outputs.page_url }}
    steps:
      - id: github-deployment
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          artifact_name: deployment

  clean-up:
    runs-on: ubuntu-latest
    needs:
      - deploy-to-github-pages
    environment:
      name: chore
    steps:
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
            name: deployment
